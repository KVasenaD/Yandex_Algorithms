// A. Interactor

// Ограничение времени         1 секунда
// Ограничение памяти          256Mb
// Ввод                        стандартный ввод или input.txt
// Вывод                       стандартный вывод или output.txt

// Лена руководит разработкой тестирующей системы, в которой реализованы 
// интерактивные задачи.

// До заверщения очередной стадии проекта осталось написать модуль, определяющий 
// итоговый вердикт системы для интерактивной задачи. Итоговый вердикт 
// определяется из кода завершения задачи, вердикта интерактора и вердикта 
// чекера по следующим правилам:

// - Вердикт чекера и вердикт интерактора — это целые числа от 0 до 7 
// включительно.
// - Код завершения задачи — это целое число от -128 до 127 включительно.
// - Если интерактор выдал вердикт 0, итоговый вердикт равен 3 в случае, если 
// программа завершилась с ненулевым кодом, и вердикту чекера в противном 
// случае.
// - Если интерактор выдал вердикт 1, итоговый вердикт равен вердикту чекера.
// - Если интерактор выдал вердикт 4, итоговый вердикт равен 3 в случае, если 
// программа завершилась с ненулевым кодом, и 4 в противном случае.
// - Если интерактор выдал вердикт 6, итоговый вердикт равен 0.
// - Если интерактор выдал вердикт 7, итоговый вердикт равен 1.
// - В остальных случаях итоговый вердикт равен вердикту интерактора.

// Ваша задача — реализовать этот модуль.

// Формат ввода

// Входной файл состоит из трёх строк. В первой задано целое число r (−128 ≤ r ≤ 
// 127) — код завершения задачи, во второй — целое число i (0 ≤ i ≤ 7) — вердикт 
// интерактора, в третьей — целое число c (0 ≤ c ≤ 7) — вердикт чекера.

// Формат вывода

// Выведите одно целое число от 0 до 7 включительно — итоговый вердикт системы.

// Пример 1
// Ввод          Вывод
// 0             0
// 0
// 0

// Пример 2
// Ввод          Вывод
// -1            3
// 0
// 1

// Пример 3
// Ввод          Вывод
// 42            6
// 1
// 6

// Пример 4
// Ввод          Вывод
// 44            1
// 7
// 4

// Пример 5
// Ввод          Вывод
// 1             3
// 4
// 0

// Пример 6
// Ввод          Вывод
// -3            2
// 2
// 4

// Язык: Node.js 14.15.5
const { Console } = require('console');

var readline = require('readline').createInterface({
    input: process.stdin,
    output: process.stdout
});

readline.question(``, (str1) => { 
    readline.question(``, (str2) => {
        readline.question(``, (str3) => {
            let arr1 = str1.split(" ");
            let arr2= str2.split(" ");
            let arr3 = str3.split(" ");
            let num1 = Number(str1);
            let num2 = Number(str2);
            let num3 = Number(str3);
            if(arr1.length !==1 || arr2.length !==1 || arr3.length !==1){
                console.log("Необходимо ввести 1 число");
                readline.close();
            }
            else if(num2 < 0 || num2 > 7 || num3 < 0 || num3 > 7 || num1 < -128 || num1 > 127){
                console.log("Проверьте в каком диапазоне должны быть введеные числа");
                readline.close();
            }
            else {
                if(num2 == 0){
                    if(num1 !== 0){
                        console.log(3);
                        readline.close();
                    }
                    else{
                        console.log(num3);
                        readline.close();
                    }
                }
                else if(num2 == 1){
                    console.log(num3);
                        readline.close();
                }
                else if(num2 == 4){
                    if(num1 !== 0){
                        console.log(3);
                        readline.close();
                    }
                    else{
                        console.log(4);
                        readline.close();
                    }
                }
                else if(num2 == 6){
                    console.log(0);
                        readline.close();
                }
                else if(num2 == 7){
                    console.log(1);
                        readline.close();
                }
                else{
                    console.log(num2);
                        readline.close();
                }
            }
        })
    })
})